server.port=9099
spring.application.name=feed-service
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=feed-group
spring.kafka.template.default-topic=feed_topic
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.properties.spring.json.type.mapping=post:com.slinkdigital.feed.dto.PostDto
spring.kafka.consumer.properties.spring.json.trusted.packages=com.slinkdigital.wedding.dto,com.slinkdigital.vendor.dto,com.slinkdigital.feed.dto
#spring.kafka.producer.properties.spring.json.type.mapping=event:com.slinkdigital.wedding.dto.EventDto
spring.cloud.discovery.enabled=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
bootstrap.servers=localhost:9092
retry.backoff.ms=500
