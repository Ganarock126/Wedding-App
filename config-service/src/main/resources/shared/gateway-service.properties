server.port=8008
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator= INFO
logging.level.org.springframework.cloud.gateway= TRACE
spring.cloud.inetutils.timeout-seconds=10
management.endpoint.gateway.enabled=true
#management.server.port=8088

management.tracing.enabled= true
management.tracing.sampling.probability= 1.0

management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.user.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.user.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.user.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.user.slidingWindowSize=5
resilience4j.circuitbreaker.instances.user.failureRateThreshold=50
resilience4j.circuitbreaker.instances.user.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.user.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.user.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.user.timeout-duration=3s

## User Service Route
spring.cloud.gateway.routes[0].id=user-service-1
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/uu/v1/users/**

## User Service Route
spring.cloud.gateway.routes[1].id=user-service-2
spring.cloud.gateway.routes[1].uri=lb://user-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/us/v1/users/**
spring.cloud.gateway.routes[1].filters[0]=AuthFilter

## Wedding Service Route
spring.cloud.gateway.routes[2].id=wedding-service-1
spring.cloud.gateway.routes[2].uri=lb://wedding-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/wu/v1/weddings/**

## Wedding Service Route
spring.cloud.gateway.routes[3].id=wedding-service-2
spring.cloud.gateway.routes[3].uri=lb://wedding-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/ws/v1/weddings/**
spring.cloud.gateway.routes[3].filters[0]=AuthFilter

## File Service Route
spring.cloud.gateway.routes[4].id=file-service-1
spring.cloud.gateway.routes[4].uri=lb://file-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/fs/v1/files/**
spring.cloud.gateway.routes[4].filters[0]=AuthFilter

## File Service Route
spring.cloud.gateway.routes[5].id=file-service-2
spring.cloud.gateway.routes[5].uri=lb://file-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/fu/v1/files/**

spring.cloud.gateway.routes[6].id=openapi
spring.cloud.gateway.routes[6].uri=http://localhost:${server.port}
spring.cloud.gateway.routes[6].predicates[0]=Path=/v3/api-docs/**
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs

springdoc.swagger-ui.urls[0].name=user-service
springdoc.swagger-ui.urls[0].url=/user-service/v3/api-docs

springdoc.swagger-ui.urls[1].name=wedding-service
springdoc.swagger-ui.urls[1].url=/wedding-service/v3/api-docs

springdoc.swagger-ui.urls[2].name=file-service
springdoc.swagger-ui.urls[2].url=/file-service/v3/api-docs

## Vendor Service Route
#spring.cloud.gateway.routes[4].id=vendor-service-1
#spring.cloud.gateway.routes[4].uri=lb://vendor-service
#spring.cloud.gateway.routes[4].predicates[0]=Path=/api/vu/v1/vendors/**

## Vendor Service Route
#spring.cloud.gateway.routes[5].id=vendor-service-2
#spring.cloud.gateway.routes[5].uri=lb://vendor-service
#spring.cloud.gateway.routes[5].predicates[0]=Path=/api/vs/v1/vendors/**
#spring.cloud.gateway.routes[5].filters[0]=AuthFilter

spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE