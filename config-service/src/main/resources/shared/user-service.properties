server.port=8082
spring.datasource.url=jdbc:postgresql://localhost:5432/wedding-app-users
spring.datasource.username=postgres
spring.datasource.password=dondot3056
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.default_schema=dev
organization.properties.mail=davidogbodu3056@gmail.com
project.name=Wedding App
activation.token.expiration.time.hours=24
password.reset.token.expiration.time.hours=1
jwt.expiration.time=3600000
rt.expiration.time=86400000
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
jwt.secret='[a-zA-Z0-9._]^+$Guidelines89797987forAlphabeticalArraNumeralsandOtherSymbo$'
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.slinkdigital.user.dto.EventDto
springdoc.api-docs.enabled=true
springdoc.api-docs.path= /v3/api-docs
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.flyway.baseline-on-migrate=true
spring.flyway.schemas=dev
spring.flyway.locations=classpath:db/migration
cors.allowed-origins= http://localhost:3000,http://localhost:8008,http://localhost:4200
cors.allowed-methods= GET,POST,PUT,PATCH,DELETE,OPTIONS
cors.allowed-headers= Origin,Access-Control-Allow-Origin,Content-Type,Accept,Jwt-Token,Authorization,X-Requested-With,Access-Control-Request-Method,Access-Control-Request-Headers
cors.exposed-headers= Origin,Content-Type,Accept,Jwt-Token,Authorization,Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Filename
cors.max-age=3600
cors.allow-credentials=true
management.tracing.sampling.probability=1.0
management.tracing.enabled= true
#spring.security.oauth2.client.registration.google.clientId=1042749728847-3crp3uuef1tn3cg2hjhf0g8b0qr4a54e.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientId=37296399552-qujssol8begt3l035dn3eq51uvn2is5e.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
security.oauth2.client.registration.google.redirectUriTemplate={baseUrl}/oauth2/callback/{registrationId}
security.oauth2.client.registration.google.scope=email, profile
spring.cloud.config.server.bootstrap=true
spring.cloud.config.server.vault.enabled=true
spring.cloud.config.server.vault.prefix=user
spring.cloud.config.server.vault.default-context=application

app.oauth2.redirectUri=
