---
version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  postgres:
    container_name: postgres
    image: postgres:latest
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    environment:
      POSTGRES_DB: weddingappusers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dondot3056
      PGDATA: /data/postgres
    volumes:
      - ./local-data:/var/lib/postgresql/data
      - ./config/user-data.sql:/docker-entrypoint-initdb.d/user-data.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "9411:9411"

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped

  ## Eureka Server
  discovery-service:
    image: davidtega/discovery-service:latest
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - zipkin

  mailhog:
      image: mailhog/mailhog
      container_name: 'mailhog'
      ports:
        - "1025:1025"
        - "8025:8025"

  ## User-Service Docker Compose Config
  user-service:
    container_name: user-service
    image: davidtega/weddingapp-user:latest
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/weddingappusers
    volumes:
      - ./config/role-data.sql:/docker-entrypoint-initdb.d/role-data.sql:ro
    depends_on:
      - zipkin
      - postgres
      - discovery-service
    restart: unless-stopped

  api-gateway:
    image: davidtega/weddingapp-gateway:latest
    container_name: api-gateway
    ports:
      - "8000:8000"
    expose:
      - "8000"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-service

  mail-service:
    image: davidtega/weddingapp-mail:latest
    container_name: mail-service
    ports:
      - "9091:9091"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - zookeeper
      - broker
      - discovery-service
      - mailhog

  ## Prometheus
  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - discovery-service
      - user-service
      - mail-service
      - api-gateway

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  jenkins:
    image: jenkins/jenkins:lts
    volumes:
      - ./jenkins:/var/jenkins_home
    environment:
      JENKINS_HOST_HOME: "/jenkins"
    ports:
      - '8080:8080'
      - '50000:50000'